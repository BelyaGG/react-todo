import React, { useState } from 'react'
import './TodoList.css';

export default function Todolist({todo, setTodo, idTodo}) {

  const [value , setValue] = useState('');

  function deleteTodo (id) { // —Ñ–∏–ª—å—Ç—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∏ –∑–∞–Ω–æ—Å–∏–º –≤—Å–µ item –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞ —Å–æ–≤–ø–æ–¥–∞–µ—Ç id –≤ –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ Todo 
      let newTodo = [...todo].filter(item=> item.id !== id)
      setTodo(newTodo)
  }

  function editTodo(editId) { // —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–æ–¥–∏—Ç–µ–ª—é (–ø–µ—Ä–µ–¥–∞–µ–º id —Ä–æ–¥–∏—Ç–µ–ª—é)
    idTodo(editId);
  }

  function endTodo (id) {  // –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É , –µ—Å–ª–∏ id —Å–æ–≤–ø–æ–¥–∞–µ—Ç —Å item.id , —Ç–æ —Å–º–æ—Ä—Ç–∏–º –µ–≥–æ —Å—Ç–∞—Å—É—Å . –ï—Å–ª–∏ —Å—Ç–∞—Å—É—Å 3 (–∑–∞–≤–µ—Ä—à–µ–Ω–æ–µ) –¥–µ–ª–∞–µ–º —Å—Ç–∞—Ç—É—Å 1 (–≤ –æ–∂–∏–¥–∞–Ω–∏–∏). –ò –Ω–∞–æ–±–æ—Ä–æ—Ç. –ü–æ—Å–ª–µ —á–µ–≥–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    let endTodo = [...todo].map(item => {
      if (item.id === id){
        if (item.status === 3 ) {
          item.status = 1
          
        } else {
          item.status = 3
        }
      }
      return item
    })
    setTodo(endTodo)
  }

  function statusTodo(id) { 
    let newStatus = [...todo].map(item =>{ // –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É
      if (item.id === id) { // –µ—Å–ª–∏ id —Ä–∞–≤–µ–Ω item.id, –µ—Å–ª–∏ —Å—Ç–∞—Å—É—Å item —Ä–∞–≤–µ–Ω –æ–¥–Ω–æ–º—É —Ç–æ —Å–Ω–æ–≤–∞ –ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É –∏ –≤—Å–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º item —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 2 ( –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ)  –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º —Å—Ç–∞—Å—É—Å 1 (–≤ –æ–∂–∏–¥–∞–Ω–∏–∏). –ê –Ω—É–∂–Ω–æ–º—É item –ø—Ä–∏—Å–≤–æ–∏–º —Å—Ç–∞—Å—É—Å 2
        if (item.status === 1) { 
          [...todo].map(item =>{
            if (item.status === 2) {
              item.status =1
            }
            return item
          })
          item.status = 2
        } else { 
          item.status = 1
        }
      }
      return item
    })
    setTodo(newStatus)
  }

  return (
    <div className='TodoList'>
      <div> 
        <input className='SearchInput' placeholder='Search ToDo üç≥'  value={ value } onChange={ (e) => setValue(e.target.value)} />
      </div>
      <div className='TodoItems'>

        {
          value < 1 ? 
            todo.map(item =>(
              <div className='TodoItem'> 
                <div className={`TodoTitle ${item.status === 1 ? 'WaitTodo' : item.status === 2 ? 'ProgressTodo' : 'EndTodo'}`} onClick={()=> endTodo(item.id)}> {item.title} </div> 
                <button className='BtnDelete' onClick={()=>deleteTodo(item.id)}>–£–¥–∞–ª–∏—Ç—å</button>
                <button className='BtnEdit' onClick={()=>editTodo(item.id)}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                {
                  item.status === 1 ?
                    <button className='BtnStatus' onClick={()=>statusTodo(item.id)}>–í –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</button>:
                  item.status === 2 ?
                    <button className='BtnStatus' onClick={()=>statusTodo(item.id)}>–°–Ω—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</button>:
                  console.log()
                }
              </div>
            )):
            todo.filter(item => item.title.toLowerCase().includes(value.toLowerCase())).map(item => (
              <div className='TodoItem'> 
                <div className={`TodoTitle ${item.status === 1 ? 'WaitTodo' : item.status === 2 ? 'ProgressTodo' : 'EndTodo'}`} onClick={()=> endTodo(item.id)}> {item.title} </div> 
                <button className='BtnDelete' onClick={()=>deleteTodo(item.id)}>–£–¥–∞–ª–∏—Ç—å</button>
                <button className='BtnEdit' onClick={()=>editTodo(item.id)}>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                {
                  item.status === 1 ?
                    <button className='BtnStatus' onClick={()=>statusTodo(item.id)}>–í –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</button>:
                  item.status === 2 ?
                    <button className='BtnStatus' onClick={()=>statusTodo(item.id)}>–°–Ω—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</button>:
                  console.log()
                }
              </div>
          ))
        }
        </div>
    </div>
  )
}
